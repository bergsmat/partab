% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/definitions.R
\name{as.definitions.modelname}
\alias{as.definitions.modelname}
\alias{definitions}
\title{Create a Item Definitions from Model Name}
\usage{
\method{as.definitions}{modelname}(x, verbose = FALSE,
  opt = getOption("project"), project = if (is.null(opt)) getwd() else opt,
  rundir = file.path(project, x), ctlfile = file.path(rundir, paste0(x,
  ".ctl")), fields = c("symbol", "label", "unit"), unique = TRUE, ...)
}
\arguments{
\item{x}{a model name (numeric or character)}

\item{verbose}{set FALSE to suppress messages}

\item{opt}{alternative argument for setting project}

\item{project}{parent directory of model directories}

\item{rundir}{specific model directory}

\item{ctlfile}{path to control stream}

\item{fields}{metadata fields to read from control stream if no metafile}

\item{unique}{drop duplicate definitions}

\item{...}{passed to other functions}
}
\value{
object of class definitions, data.frame
}
\description{
Creates a item definitions from a model name. Pass the project argument or set 
the project option.
}
\details{
Normally you can just call the generic.  Suitable defaults are supplied, but much customization is supported by means of arguments documented here and in called functions.
}
\examples{
library(magrittr)
options(project = system.file('project/model',package='partab'))
1001 \%>\% as.definitions
}
\seealso{
\code{\link{as.xml_document.modelname}}

\code{\link{as.bootstrap.modelname}}

\code{\link{as.nmctl.modelname}}

\code{\link{write.csv}}

\code{\link{read.csv}}
}

